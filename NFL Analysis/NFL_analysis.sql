/* HERE ARE A COUPLE OF QUERIES MADE TO IDENTIFY SOME KEY POINTS USING 2023 NFL DATA
DATA SOURCE: https://www.pro-football-reference.com/
*/
--- GENERAL STATISTIC BY POSITION
SELECT FANTPOS
	, COUNT(FANTPOS) AS CNT
	, MIN(AGE) AS MIN_AGE
	, MAX(AGE) AS MAX_AGE
	, SUM(PASS_ATT + RUSH_ATT + REC) AS TOTAL_TOUCH
	, SUM(PASS_YDS + RUSH_YDS + YDS) AS TOTAL_YDS
	, SUM("Int" + FL) AS TOTAL_TURNOVER
	, SUM(PASS_TD + TOTAL_TD) AS TOTAL_TD
FROM PLAYER
GROUP BY FANTPOS

;
--- TOP 10 PLAYERS IN THEIR POSITIONS
SELECT PLAYER
	, TM
	,  FANTPOS
	, POSRANK
FROM PLAYER
WHERE POSRANK <= 10
ORDER BY FANTPOS, POSRANK

;
--- DEFENSE RANK TO W/L
SELECT RK
	, STANDINGS.TM
	, W, L
	, "W-L%"
FROM DEFENSE
JOIN STANDINGS
ON STANDINGS.TM = DEFENSE.TM
ORDER BY RK

;
--- KICKING RANKING BY POINTS
SELECT 
	ROW_NUMBER() OVER(ORDER BY SUM(FGM*3 + XPM) DESC) AS RK
	,TM
	, SUM(FGM*3 + XPM) AS TOTAL_POINTS
FROM KICKING
GROUP BY TM
ORDER BY TOTAL_POINTS DESC

;
--- AGE VS STATS FOR QB
SELECT AGE
, COUNT(CASE WHEN FANTPOS = 'QB' THEN 1 END) AS QB_CNT
, AVG(G) AS AVG_G
, AVG(GS) AS AVG_GS
, SUM(CMP) AS TOTAL_CMP
, SUM(PASS_ATT) AS TOTAL_PASS_ATT, SUM(PASS_YDS) AS TOTAL_PASS_YDS , SUM(PASS_TD) AS TOTAL_PASS_TD
, SUM(RUSH_ATT) AS TOTAL_RUSH_ATT, SUM(RUSH_YDS) AS TOTAL_RUSH_YDS, SUM(RUSH_TD) AS TOTAL_RUSH_TD
, SUM("Int") AS TOTAL_INT, SUM(FMB) AS TOTAL_FMB, SUM(PASS_TD + TOTAL_TD) AS TOTAL_TD
FROM PLAYER
WHERE FANTPOS = 'QB'
GROUP BY AGE
ORDER BY AGE

;
--- COMPARISON OF PLAYER TO TOTAL AVG, TOP 10 IN POSITION
SELECT POSRANK
	, PLAYER
	, TM
	, FANTPOS
	, (PASS_ATT + RUSH_ATT + REC) AS TOTAL_TOUCH
	, AVG(PASS_ATT + RUSH_ATT + REC) OVER(PARTITION BY FANTPOS) AS NFL_AVG_TOUCH
	, AVG(CASE WHEN POSRANK <= 10 THEN (PASS_ATT + RUSH_ATT + REC) END) OVER(PARTITION BY FANTPOS) AS TOP_10_AVG_TOUCH
	, (PASS_YDS + RUSH_YDS + YDS) AS TOTAL_YDS
	, AVG(PASS_YDS + RUSH_YDS + YDS) OVER(PARTITION BY FANTPOS) AS NFL_AVG_YDS
	, AVG(CASE WHEN POSRANK <= 10 THEN (PASS_YDS + RUSH_YDS + YDS) END) OVER(PARTITION BY FANTPOS) AS TOP_10_AVG_YDS
	, (PASS_TD + TOTAL_TD) AS TOTAL_TDS
	, AVG(PASS_TD + TOTAL_TD) OVER(PARTITION BY FANTPOS) AS NFL_AVG_TDS
	, AVG(CASE WHEN POSRANK <= 10 THEN (PASS_TD + TOTAL_TD) END) OVER(PARTITION BY FANTPOS) AS TOP_10_AVG_TDS
FROM PLAYER
WHERE FANTPOS <> 'FB'
ORDER BY FANTPOS, POSRANK

;

--- HOME VS AWAY WINS
SELECT 
	COUNT(CASE WHEN "LOCATION" = '' THEN 1 END) AS HOME_WINS
	,COUNT(CASE WHEN "LOCATION" = '@' THEN 1 END) AS AWAY_WINS
	,AVG(CASE WHEN "LOCATION" = '' THEN (WIN_PTS-LOSE_PTS) END) AS HOME_WIN_PTS
	,AVG(CASE WHEN "LOCATION" = '@' THEN (WIN_PTS-LOSE_PTS) END) AS AWAY_WIN_PTS
FROM SCHEDULE_BY_WEEK

;
--- UNDERDOG WINS BASED ON END OF SEASON RANK
SELECT 
	COUNT(CASE WHEN W_RANK > L_RANK THEN 1 END) AS UNDERDOG_WINS
	,COUNT(CASE WHEN W_RANK < L_RANK THEN 1 END) AS FAVORITE_WINS
	,COUNT(W_RANK) AS TOTAL_GAMES 
FROM
(
	SELECT 
		W_RANK
		,WINNER
		,L_RANK
		,LOSER
	FROM
		(
		SELECT 
			ROW_NUMBER() OVER(ORDER BY "W-L%" DESC, MoV DESC) AS W_RANK
			,TM
		FROM STANDINGS
		) AS A
	RIGHT JOIN SCHEDULE_BY_WEEK
	ON WINNER = A.TM
	LEFT JOIN 
			(
		SELECT 
			ROW_NUMBER() OVER(ORDER BY "W-L%" DESC, MoV DESC) AS L_RANK		
			,TM
		FROM STANDINGS
		) AS B
	ON LOSER = B.TM
) AS C

;
